{
  "questions": [
    {
      "question": "운영체제란?",
      "choices": [
        "하드웨어 자원들을 관리하는 프로그램들의 집합",
        "응용프로그램들을 위한 System service provider",
        "하드웨어와 응용프로그램들을 이어주는 연결부",
        "위에 언급된 모두 해당"
      ],
      "answer": 4,
      "explanation": "-",
      "references": [
        {"[한]OS": "https://ko.wikipedia.org/wiki/%EC%9A%B4%EC%98%81_%EC%B2%B4%EC%A0%9C"},
        {"OS": "https://en.wikipedia.org/wiki/Operating_system"}
      ]
    },
    {
      "question": "운영체제의 서비스에 접근하기위한 인터페이스는 ___를 통해 제공된다.",
      "choices": [
        "시스템 콜 (System call)",
        "API",
        "Library",
        "어셈블리 명령어 (Assembly instruction)"
      ],
      "answer": 1,
      "explanation": "-",
      "references": [{"System call": "https://en.wikipedia.org/wiki/System_call"}]
    },
    {
      "question": "다음 중 틀린 설명은?",
      "choices": [
        "Kernel은 운영체제의 핵심을 구성하는 프로그램이다.",
        "Kernel은 부팅하는 동안 메모리를 로드하는 운영체제의 첫 부분이다.",
        "Kernel은 운영체제를 실행하는 중에는 읽어들일 수 없는 다양한 모듈로 구성되어 있다.",
        "Kernel은 컴퓨터의 전체 세션동안 메모리에 남아있다."
      ],
      "answer": 3,
      "explanation": "Kernel은 운영체제의 핵심 부분으로 운영체제에 다양한 서비스를 지원하기위해 상호작용이 되어야하므로 읽어들일 수 있어야 합니다.",
      "references": [
        {"커널": "https://ko.wikipedia.org/wiki/%EC%BB%A4%EB%84%90_(%EC%BB%B4%ED%93%A8%ED%8C%85)"},
        {"Kernel": "https://en.wikipedia.org/wiki/Kernel_(operating_system)"}
      ]
    },
    {
      "question": "다음 중 어떤 것이 운영체제에 의해 처리되는 에러인가?",
      "choices": [
        "정전, 전력 문제",
        "프린터 용지 부족",
        "네트워크 연결 실패",
        "위에 언급된 모두 해당"
      ],
      "answer": 4,
      "explanation": "운영체제가 불러와진 뒤의 모든 환경은 운영체제의 관리 하에 있다고 볼 수 있습니다. 이는 SW뿐만 아니라 HW도 해당합니다."
    },
    {
      "question": "명령 해석기 (Command interpreter) 의 주요 기능은?",
      "choices": [
        "사용자 정의 명령을 해석하고 실행하기 위함",
        "API와 응용프로그램 간의 인터페이스를 제공하기 위함",
        "운영체제에서 파일들을 처리하기 위함",
        "모두 해당 안됨"
      ],
      "answer": 1,
      "explanation": "예시 - Bash (Unix의 shell), Z shell (Zsh) 등",
      "references": [{"Command interpreter" : "https://en.wikipedia.org/wiki/List_of_command-line_interpreters"}]
    },
    {
      "question": "운영체제의 자원은 ___을 통해 관리되어진다.",
      "choices": [
        "시분할 (Time division) multiplexing",
        "공간 분할 (Space division) multiplexing",
        "시공간 분할 (Time and space division) multiplexing",
        "모두 해당 안됨"
      ],
      "answer": 3,
      "explanation": "\n* 시분할 multiplexing 예시 : Single-core processor 상에서의 multiprogramming (CPU scheduling).\n\n* 공간 분할 multiplexing 예시 : Process Control Block (PCB)"
    },
    {
      "question": "프로세스가 실패했을 때 대부분의 운영체제는 에러 정보를 ___에 기록한다.",
      "choices": [
        "로그 파일",
        "네트워크",
        "실행중인 다른 프로세스",
        "메모리"
      ],
      "answer": 1,
      "explanation": "에러 정보 (에러 로그)는 프로세스가 비정상적으로 종료되어도 확인할 수 있어야하므로 비휘발성인 저장소에 파일로 기록되는게 일반적입니다. 구현에 따라 추가적으로 네트워크를 통해 원격 저장소에 저장하기도 합니다."
    },
    {
      "question": "다음 중 실시간 운영체제가 아닌 것은?",
      "choices": [
        "VxWorks",
        "Windwos CE",
        "RTLinux",
        "Palm OS"
      ],
      "answer": 4,
      "explanation": "Palm OS는 96년도에 출시된 PDA 및 모바일용 운영체제로 터치스크린 GUI를 위해 개발되었고 실시간 운영체제는 아닙니다.",
      "references": [
        {"[한]Palm OS": "https://ko.wikipedia.org/wiki/%ED%8C%9C_OS"},
        {"Palm OS" : "https://en.wikipedia.org/wiki/Palm_OS"}
      ]
    },
    {
      "question": "다음 중 Kernel mode (Kernel space)의 비중이 제일 큰 kernel은?",
      "choices": [
        "Microkernel",
        "Monolithic kernel",
        "Hybrid kernel",
        "Exokernel"
      ],
      "answer": 2,
      "explanation": "\nKernel space 크기 : Monolithic kernel > Hybrid kernel > Microkernel > Exokernel",
      "references": [
        {"Microkernel" : "https://en.wikipedia.org/wiki/Microkernel"},
        {"Monolithic kernel" : "https://en.wikipedia.org/wiki/Monolithic_kernel"},
        {"Hybrid kernel" : "https://en.wikipedia.org/wiki/Hybrid_kernel"}
      ]
    },
    {
      "question": "컴퓨터가 전원을 공급받았을 때 최초로 실행되는 프로그램을 ___라 한다.",
      "choices": [
        "Boot program",
        "Bootloader",
        "Intializer",
        "Bootstrap program"
      ],
      "answer": 4,
      "explanation": "전원을 공급받고 초기 설정을 하는 단계를 bootstrapping이라 합니다. 구체적으로 bootstrapping이란 하드웨어적으로 지정된 시작 주소에 있는 bootstrap progrm을 최초로 메인메모리로 읽어들여 외부 입력없이 추가적인 명령어를 읽어들일 수 있는 상태로 만드는 것까지를 말합니다. 상태를 만든다는 것에는 설정 값을 불러오거나 BIOS 확인 등이 있습니다. Bootstrapping을 줄여 booting이라고도 부르지만 bootstrap program은 boot program이라고 줄이지 않습니다.",
      "references": [
        {"Bootstrapping" : "https://en.wikipedia.org/wiki/Bootstrapping#Computing"}
      ]
    }
  ]
}
