{
  "questions": [
    {
      "question": "Physical layer는 ___ 전달이 고려되었다.",
      "choices": [
        "bit by bit",
        "process to process",
        "port to port",
        "application to application"
      ],
      "answer": 1,
      "explanation": "Physical layer는 첫 번째 계층으로써 네트워크에서 물리적으로 bit를 보내는 방법을 다룹니다. Process 간 또는 port 간은 transport layer에서 다뤄집니다."
    },
    {
      "question": "다음 중 어느 전송 매체가 제일 빠른 전송 속도를 가지는가?",
      "choices": [
        "동축 케이블 (coaxial cable)",
        "연선 혹은 꼬임 쌍선 (twisted pair cable)",
        "광학 섬유 (optical fibor)",
        "전력 케이블 (electrical cable)"
      ],
      "answer": 3,
      "explanation": "-",
      "references": [{"동축 케이블": "https://ko.wikipedia.org/wiki/%EB%8F%99%EC%B6%95_%EC%BC%80%EC%9D%B4%EB%B8%94"}, {"연선": "https://ko.wikipedia.org/wiki/%EC%97%B0%EC%84%A0"}, {"광섬유": "https://ko.wikipedia.org/wiki/%EA%B4%91%EC%84%AC%EC%9C%A0"}, {"Electrical cable": "https://en.wikipedia.org/wiki/Electrical_cable"}]
    },
    {
      "question": "Bit는 ___에 의해 를 유도 매체 (guided media) 또는 비유도 매체 (unguided media)를 거쳐 아날로그 신호로 보내진다.",
      "choices": [
        "Digital modulation",
        "Amplitude modulation",
        "Frequency modulation",
        "Phase modulation"
      ],
      "answer": 1,
      "explanation": "Digital modulation은 bit의 1과 0을 표현하기위해 high 또는 low로 구별할 수 있도록 digital 신호를 analog 신호로 변환하는 기술입니다. Amplitude, frequency, phase modulation (AM/FM/PM)은 각각 진폭, 주기, 페이즈를 위한 modulation으로 역할이 다릅니다. 참고로 유도 매체는 케이블과 같은 물리적 도체를 이용해 신호를 유도하는 매체로 유선 통신에 쓰이고 비유도 매체는 무선 통신에 쓰입니다.",
      "references": [{"Modulation": "https://en.wikipedia.org/wiki/Modulation"}]
    },
    {
      "question": "Physical layer 안에서 media access control (MAC) sublayer와 연계하는 sublayer는?",
      "choices": [
        "Physical signalling sublayer",
        "Physical data sublayer",
        "Physical address sublayer",
        "Physical transport sublayer"
      ],
      "answer": 1,
      "explanation": "-"
    },
    {
      "question": "비동기 직렬 통신 (Asynchoronous serial communication) 에서 쓰이지 않는 것은?",
      "choices": [
        "Start signalling",
        "Stop signalling",
        "Clock signalling",
        "Flow control"
      ],
      "answer": 3,
      "explanation": "동기 직렬 통신은 clock signal의 송수신을 통해 동기화합니다. 반면 비동기 직렬 통신은 start signal을 통해 데이터를 받을 수 있도록 초기화시키고 stop signal을 통해 새로운 시퀀스의 데이터를 받을 수 있도록 state를 reset시킵니다. start와 stop 사이에는 flow control을 통해 비동기를 가능케 합니다.",
      "references": [{"Asynchoronous serial communication": "https://en.wikipedia.org/wiki/Asynchronous_serial_communication"}]
    },
    {
      "question": "다음 중 physical layer의 역할은?",
      "choices": [
        "Line coding",
        "Channel coding",
        "Modulation",
        "위에 언급된 모두 해당"
      ],
      "answer": 4,
      "explanation": "Line coding, channel coding 및 modulation 모두 정보 전송에 필요한 기술들로 physcial layer의 역할에 해당합니다. pin이나 커넥터, 전류 등의 물리적 설정도 physical layer에서 취급됩니다.\n\n참고로 Line coding은 디지털을 아날로그로 표현하기위한 방법으로 digital modulation으로 불리기도 합니다. Channel coding은 error correcting code를 이용해 에러를 제어하고 복구하기위한 기술로 forward error correction (FEC) 라고 부르기도 합니다.",
      "references": [{"Line code": "https://en.wikipedia.org/wiki/Line_code"}, {"FEC": "https://en.wikipedia.org/wiki/Forward_error_correction"}]
    },
    {
      "question": "___를 통해 여러 신호가 한 채널을 공유할 수 있다.",
      "choices": [
        "Mutiplexing",
        "Analog modulation",
        "Digitala modulation",
        "Phase modulation"
      ],
      "answer": 1,
      "explanation": "data rate가 낮은 여러 신호는 data rate가 높은 신호로 변환되어 전송될 수 있습니다. 수신 측에서는 복합신호를 역다중화 (demultiplexing) 함으로써 신호를 복원할 수 있습니다.",
      "references": [{"Multiplexing": "https://en.wikipedia.org/wiki/Multiplexing"}]
    },
    {
      "question": "무선 통신은 ___을 사용해 이루어질 수 있다.",
      "choices": [
        "전파 (Radio wave)",
        "마이크로파 (Microwave)",
        "적외선 (Infrared ray)",
        "위에 언급된 모두 해당"
      ],
      "answer": 4,
      "explanation": "파장의 길이는 적외선, 마이크로파, 전파 순으로 길어 적외선이 제일 짧습니다. 파장은 길이가 짧을 수록 장거리 통신에 불리합니다.",
      "references": [{"전파": "https://ko.wikipedia.org/wiki/%EC%A0%84%ED%8C%8C"}, {"마이크로파": "https://ko.wikipedia.org/wiki/%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%ED%8C%8C"}, {"적외선": "https://ko.wikipedia.org/wiki/%EC%A0%81%EC%99%B8%EC%84%A0"}]
    },
    {
      "question": "Data link layer는 ___로부터 패킷을 받아 전송을 위한 프레임으로 은닉화한다.",
      "choices": [
        "Physical layer",
        "Network layer",
        "Transport layer",
        "Application layer"
      ],
      "answer": 2,
      "explanation": "데이터 전송 시 데이터는 application layer에서 transport layer로 보내지고 이는 세그먼트로 변환됩니다. 계속하여 network layer로 보내져 패킷으로 바뀌고 data link layer에서 프레임으로 은닉화한 뒤 physical layer에서 bit로 변환돼 실제 물리적으로 전송됩니다.",
      "references": [{"Encapsulation": "https://en.wikipedia.org/wiki/Encapsulation_(networking)"}]
    },
    {
      "question": "다음 중 data link layer에서 행해지는 것이 아닌 것은?",
      "choices": [
        "Framing",
        "Error control",
        "Flow control",
        "Channel coding"
      ],
      "answer": 4,
      "explanation": "Channel coding은 physical layer의 역할입니다."
    },
    {
      "question": "프레임의 헤더는 일반적으로 ___를 포함한다.",
      "choices": [
        "Synchronization bytes",
        "Addresses",
        "Frame identifier",
        "위에 언급된 모두 해당"
      ],
      "answer": 4,
      "explanation": "-"
    },
    {
      "question": "Automatic repeat request (ARQ) 에러관리 기법은 ___에서 제공된다.",
      "choices": [
        "Logical link control sublayer",
        "Media access control sublayer",
        "Network interface control sublayer",
        "Application access control sublayer"
      ],
      "answer": 1,
      "explanation": "ARQ는 에러 컨트롤의 책임을 지고 있는 Logical link control (LLC) sublayer에서 이루어집니다.",
      "references": [{"ARQ": "https://en.wikipedia.org/wiki/Automatic_repeat_request"}, {"LLC": "https://en.wikipedia.org/wiki/Logical_link_control"}]
    },
    {
      "question": "데이터 유닛에서 2 bit 이상이 전송 중에 변경된 오류를 ___라 한다.",
      "choices": [
        "Random error",
        "Burst error",
        "Inverted error",
        "Double error"
      ],
      "answer": 2,
      "explanation": "1 bit error는 single bit error라 하며 2 bit 이상의 충돌 또는 에러를 burst error라 합니다. 만약 single bit error라면 단순하게 한 bit를 역전시킴으로써 수정할 수 있지만 burst error라면 프레임을 다시 전송받아야 합니다."
    },
    {
      "question": "CRC가 의미하는 것은?",
      "choices": [
        "Code Repeat Check",
        "Code Redundancy Check",
        "Cyclic Redundancy Check",
        "Cyclic Repeat Check"
      ],
      "answer": 3,
      "explanation": "CRC는 프레임 trailer에 추가돼 에러를 감지하기위해 쓰이는 코드입니다. 에러 수정은 불가능합니다. Redundancy라 불리는 이유는 에러 발견을 위해 정보가 아님에도 추가적으로 붙는 잉여 bit이기 때문입니다. cyclic이 붙는 이유는 redundancy로 붙는 코드가 cyclic code를 기반으로 하기 때문입니다.",
      "references": [{"CRC": "https://en.wikipedia.org/wiki/Cyclic_redundancy_check"}, {"Cyclic code": "https://en.wikipedia.org/wiki/Cyclic_code"}]
    },
    {
      "question": "다음 중 data link protocol로 알맞은 것은?",
      "choices": [
        "Ethernet",
        "Point to point protocol (PPP)",
        "HDLC",
        "위에 언급된 모두 해당"
      ],
      "answer": 4,
      "explanation": "Data link protocol에는 synchronous data link protocol (SDLC), high level data link protocol (HDLC), serial line interface protocol (SLIP), PPP 등 다양하게 있습니다."
    },
    {
      "question": "보기의 multiple access protocol들 중 성격이 다른 것은?",
      "choices": [
        "CSMA/CD",
        "CSMA/CA",
        "TDMA",
        "ALOHA"
      ],
      "answer": 3,
      "explanation": "CSMA/CD, CSMA/CA 및 ALOHA는 random access protocol인 반면 TDMA는 channelization protocol입니다.",
      "references": [{"CSMA/CD": "https://en.wikipedia.org/wiki/Carrier-sense_multiple_access_with_collision_detection"}, {"Channelization": "https://en.wikipedia.org/wiki/Channelization_(telecommunications)"}]
    },
    {
      "question": "수신 측에서 acknowledgement (ACK) 컨트롤 프레임을 송신자에게 바로 보내지않고 의도적으로 잠시 지연시키는 기술은?",
      "choices": [
        "Piggybacking",
        "Cyclic redundancy check",
        "Fletcher's checksum",
        "Parity check"
      ],
      "answer": 1,
      "explanation": "ACK 프레임을 바로 보내지않고 송신할 데이터 프레임에 붙여 보내면 전송 횟수를 줄여 전송 효율을 높이는 효과를 기대할 수 있습니다. 다만 수신 측에서 더 이상 보낼 정보가 없었다면 무의미한 지연이 될 수 있으므로 적절한 timeout이 필요합니다.",
      "references": [{"Piggybacking": "https://en.wikipedia.org/wiki/Piggybacking_(data_transmission)"}, {"Piggybacking [한]": "https://terms.naver.com/entry.nhn?docId=2271875&cid=51207&categoryId=51207"}]
    },
    {
      "question": "Network layer는 ___ 전송에 고려된다.",
      "choices": [
        "Bits",
        "Frames",
        "Packets",
        "Segments"
      ],
      "answer": 3,
      "explanation": "-",
      "references": [{"Network layer": "https://en.wikipedia.org/wiki/Network_layer"}]
    },
    {
      "question": "다음 중 network layer의 기능이 아닌 것은?",
      "choices": [
        "Routing",
        "Inter-networking",
        "Congestion control",
        "Error control"
      ],
      "answer": 4,
      "explanation": "에러 제어는 data link layer와 transport layer의 기능입니다."
    },
    {
      "question": "4 바이트의 IP 주소가 포함하는 것은?",
      "choices": [
        "Network address",
        "Host address",
        "Network address와 host address",
        "Network address와 MAC address"
      ],
      "answer": 3,
      "explanation": "IPv4에서 주소는 network address (network prefix)와 host address (host number)로 나뉘며 각 크기는 클래스에 의존합니다. 클래스는 A, B 또는 C이며 A에서 C로 갈수록 network prefix에 크기가 많이 할당 되어 나타낼 수 있는 호스트 수가 적어집니다.",
      "references": [{"IPv4": "https://en.wikipedia.org/wiki/IPv4"}]
    }
  ]
}
