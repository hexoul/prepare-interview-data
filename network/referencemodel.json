{
  "questions": [
    {
      "question": "Internet protocol stack(TCP/IP 모델)에는 몇 개의 계층이 존재하는가?",
      "choices": [
        "5",
        "6",
        "7",
        "10"
      ],
      "answer": 1,
      "explanation": "Internet protocol stack은 Internet protocl suite의 구현체로 제안자에 따라 일부 계층의 이름이 다를 때도 있으나, 일반적으로는 OSI 모델을 고려해 물리 계층(physical layer), 데이터 링크 계층(data link layer), 인터넷 계층(internet 혹은 network layer), 전송 계층(transport layer), 응용 계층(application layer)의 다섯 레이어로 생각됩니다.",
      "references": [{"Internet protocol suite": "https://en.wikipedia.org/wiki/Internet_protocol_suite"}]
    },
    {
      "question": "ISO OSI 모델에는 몇 개의 계층이 존재하는가?",
      "choices": [
        "5",
        "6",
        "7",
        "10"
      ],
      "answer": 3,
      "explanation": "물리 계층(physical layer), 데이터 링크 계층(data link layer), 네트워크 계층(network layer), 전송 계층(transport layer), 세션 계층(session layer), 표현 계층(presentation layer) 그리고 응용 계층(application layer)으로 총 7계층입니다.",
      "references": [
        {"[한] OSI model": "https://ko.wikipedia.org/wiki/OSI_%EB%AA%A8%ED%98%95"},
        {"OSI model": "https://en.wikipedia.org/wiki/OSI_model"}
      ]
    },
    {
      "question": "다음 중 TCP/IP 모델에는 없고 OSI 모델에만 존재하는 계층은 무엇인가?",
      "choices": [
        "응용 계층(application layer)",
        "표현 계층(presentation layer)",
        "세션 계층(session layer)",
        "표현 계층과 세션 계층"
      ],
      "answer": 4,
      "explanation": "TCP/IP 모델에서는 표현 계층(presentation layer)과 세션 계층(session layer)은 응용 계층(application layer)에 포함됩니다.",
      "references": [{"모델 비교": "https://en.wikipedia.org/wiki/Internet_protocol_suite#Comparison_of_TCP/IP_and_OSI_layering"}]
    },
    {
      "question": "다음 중 표현 계층(presentation layer)이 포함하는 기능은?",
      "choices": [
        "데이터 압축",
        "데이터 암호화",
        "데이터 복호화",
        "위에 언급된 모두 해당"
      ],
      "answer": 4,
      "explanation": "표현 계층(presentation layer)은 애플리케이션이 네트워크마다 다를 수 있는 데이터 포맷이나 전송 방식 등을 신경쓰지않고 작업할 수 있도록 독립성을 제공하는 계층입니다. 따라서 송수신 시에 하위 레이어에 따라 애플리케이션에서 받거나 애플리케이션에 보낼 데이터를 압축 또는 해제하거나 변환하는 등의 작업을 합니다.",
      "references": [
        {"[한] OSI model": "https://ko.wikipedia.org/wiki/OSI_%EB%AA%A8%ED%98%95"},
        {"OSI model": "https://en.wikipedia.org/wiki/OSI_model"}
      ]
    },
    {
      "question": "다음 중 교환되는 메세지 스트림의 동기화를 제공하는 계층은?",
      "choices": [
        "응용 계층(application layer)",
        "세션 계층(session layer)",
        "전송 계층(transport layer)",
        "데이터 링크 계층(data link layer)"
      ],
      "answer": 2,
      "explanation": "세션 계층(session layer)은 종단 프로세스 간에 세션의 확립, 유지 및 중단을 위한 메커니즘을 제공하는 계층입니다. 세션을 직접 관리함으로써 전이중(full-duplex) 및 반이중(half-duplex) 통신 위에서의 동기화를 가능하게 합니다. 세션 계층의 대표적인 예로는 TCP/IP가 있습니다.",
      "references": [
        {"[한] OSI model": "https://ko.wikipedia.org/wiki/OSI_%EB%AA%A8%ED%98%95"},
        {"OSI model": "https://en.wikipedia.org/wiki/OSI_model"}
      ]
    },
    {
      "question": "OSI 모델에서 종단 A로부터 종단 B로 데이터를 보낼 때, B에서 데이터가 5번째로 거치는 계층은?",
      "choices": [
        "응용 계층(application layer)",
        "세션 계층(session layer)",
        "전송 계층(transport layer)",
        "네트워크 계층(network layer)"
      ],
      "answer": 2,
      "explanation": "수신 측에서 데이터는 하위 계층에서 상위 계층으로 가는 흐름이므로, 물리 계층(physical layer)부터 시작하여 5번째는 세션 계층(session layer)가 됩니다.",
      "references": [
        {"[한] OSI model": "https://ko.wikipedia.org/wiki/OSI_%EB%AA%A8%ED%98%95"},
        {"OSI model": "https://en.wikipedia.org/wiki/OSI_model"}
      ]
    },
    {
      "question": "TCP/IP 모델에서 종단 A로부터 종단 B로 데이터를 보낼 때, A에서 데이터가 5번째로 거치는 계층은?",
      "choices": [
        "응용 계층(application layer)",
        "세션(session layer)",
        "네트워크(network layer)",
        "물리 계층(physical layer)"
      ],
      "answer": 4,
      "explanation": "송신 측에서 데이터는 상위 계층에서 하위 계층으로 가는 흐름이므로, 응용 계층(application layer)부터 시작하여 5번째는 물리 계층(physical layer)이 됩니다. 만약 OSI 모델에서의 통신이었다면 네트워크 계층(network layer)이 정답이 되었을 것입니다.",
      "references": [{"Internet protocol suite": "https://en.wikipedia.org/wiki/Internet_protocol_suite"}]
    },
    {
      "question": "OSI는 다음 중 무엇의 약어인가?",
      "choices": [
        "Open System Interconnection",
        "Operating System Interface",
        "Optical Service Implementation",
        "Open Service Internet"
      ],
      "answer": 1,
      "explanation": "-",
      "references": [
        {"[한] OSI model": "https://ko.wikipedia.org/wiki/OSI_%EB%AA%A8%ED%98%95"},
        {"OSI model": "https://en.wikipedia.org/wiki/OSI_model"}
      ]
    },
    {
      "question": "OSI 모델에서 네트워크 지원 계층(network support layer)과 사용자 지원 계층(user support layer)을 잇는 계층은?",
      "choices": [
        "세션 계층(session layer)",
        "전송 계층(transport layer)",
        "네트워크 계층(network layer)",
        "데이터 링크 계층(data link layer)"
      ],
      "answer": 2,
      "explanation": "Layer 1, 2, 3인 물리(physical), 데이터 링크(data link), 네트워크(network) 계층의 네트워크 지원 계층(network support layer)과 Layer 5, 6, 7인 세션(session), 표현(presentation), 응용(application) 계층의 사용자 지원 계층(user support layer)을 데이터를 분할하고 재정렬함으로써 연동시키는 계층은 전송 계층(transport layer)입니다. 프로토콜로 TCP 또는 UDP가 일반적으로 사용됩니다. 참고로 네트워크 지원 계층이란 노드 간에 물리적으로 데이터를 보내는 기능에 관련된 계층들입니다. 반면 사용자 지원 계층은 기반 시스템과 상관없이 논리적으로 데이터를 주고받는 기능과 관련된 계층들을 말합니다."
    },
    {
      "question": "TCP/IP 프로토콜에서 사용되는 주소는?",
      "choices": [
        "물리 주소(physical address)",
        "논리 주소(logical address)",
        "포트 주소(port address)",
        "위에 언급된 모두 해당"
      ],
      "answer": 4,
      "explanation": "TCP/IP 프로토콜은 네트워크 지원 계층(network support layer)뿐만 아니라 응용 계층(application layer)까지 포함하므로 물리 주소, 논리적 주소 및 포트 모두 사용됩니다. 포트의 사용 예로 한 공인(public) IP에 여러 사설(private) IP가 매핑되어 있을 때 구별하기위해 사용되기도 합니다.",
      "references": [{"Network address translation": "https://en.wikipedia.org/wiki/Network_address_translation"}]
    },
    {
      "question": "TCP/IP 모델은 OSI 모델 ___",
      "choices": [
        "보다 먼저 개발됐다.",
        "보다 나중에 개발됐다.",
        "과 동시에 개발됐다.",
        "과 관계없다."
      ],
      "answer": 1,
      "explanation": "TCP/IP 모델은 1978년에서 1983년 사이에 인터넷을 위한 모델로 여러 연구소에서 개발되었습니다. 반면 OSI 모델은 나아가 일반적인 네트워크 모델을 목표로 1984년에 개발되었습니다."
    },
    {
      "question": "다음 중 일반적인 네트워크 모델에서 프로세스 간 데이터 전달을 책임지는 계층은?",
      "choices": [
        "네트워크 계층(network layer)",
        "전송 계층(transport layer)",
        "세션 계층(session layer)",
        "데이터 링크 계층(data link layer)"
      ],
      "answer": 2,
      "explanation": "전송 계층(transport layer, L4)은 네트워크 상에 존재하는 두 시스템 간의 논리적 연결을 생성하고 데이터를 전송하는 역할을 합니다. 대부분의 경우 프로토콜로 TCP 또는 UDP가 구현됩니다.",
      "references": [{"Transport layer": "https://en.wikipedia.org/wiki/Transport_layer"}]
    },
    {
      "question": "한 호스트 내에서 transport layer가 프로세스를 특정짓기위해 사용하는 주소는?",
      "choices": [
        "물리 주소(physical address)",
        "논리 주소(logical address)",
        "포트 주소(port address)",
        "위에 언급된 모두 해당"
      ],
      "answer": 3,
      "explanation": "종단에 패킷이 도착했을 때 어느 프로세스로 보낼지 포트를 통핵 결정할 수 있습니다(multiplexing). 몇 가지 예로 20은 FTP, 22는 SSH, 23은 TELNET에 쓰입니다. 참고로 이 기능은 TCP/IP 모델에서는 L4인 전송 계층(transport layer)의 역할이나 OSI 모델에서는 L5인 세션 계층(session layer)의 역할이기도 합니다.",
      "references": [{"Transport layer": "https://en.wikipedia.org/wiki/Transport_layer"}]
    },
    {
      "question": "데이터 전송율은 ___에 의해 결정된다.",
      "choices": [
        "네트워크 계층(network layer)",
        "물리 계층(physical layer)",
        "데이터 링크 계층(data link layer)",
        "전송 계층(transport layer)"
      ],
      "answer": 2,
      "explanation": "물리 계층(physical layer)은 첫 번째 계층으로써 네트워크 케이블 등 물리적인 전송매체를 통해 raw bit를 전송합니다. 이를 위해 회로를 통한 전송 기술들이 이 계층에서 정의되므로 데이터 전송율(transmission data rate) 또는 전송 속도는 물리 계층에 의해 결정된다고 볼 수 있습니다. 물리 계층인만큼 이는 직접 연결된 두 노드 간에서의 전송이고 네트워크 상에서 여러 노드를 걸치는 E2E 전송 속도는 라우팅 알고리즘 등 다른 계층과도 연관이 있습니다.",
      "references": [
        {"Physical layer": "https://en.wikipedia.org/wiki/Physical_layer"}
      ]
    },
    {
      "question": "패킷이 종단에서 종단(End-to-end)으로 전송될 때 직면할 수 있는 지연은?",
      "choices": [
        "전달 지연(propagation delay)",
        "대기 지연(queuing delay)",
        "전송 지연(transmission delay)",
        "위에 언급된 모두 해당"
      ],
      "answer": 4,
      "explanation": "종단 간 지연(E2E delay)에는 processing, propagation, queuing, transmission delay가 포함됩니다.",
      "references": [
        {"E2E delay": "https://en.wikipedia.org/wiki/End-to-end_delay"},
        {"Processing delay": "https://en.wikipedia.org/wiki/Processing_delay"},
        {"Propagation delay": "https://en.wikipedia.org/wiki/Propagation_delay"},
        {"Queuing delay": "https://en.wikipedia.org/wiki/Queuing_delay"},
        {"Transmission delay": "https://en.wikipedia.org/wiki/Transmission_delay"}
      ]
    },
    {
      "question": "종단에서 유선으로 패킷 송신 시 발생할 수 있는 지연 중에서 시간상 두 번째로 겪는 지연은?",
      "choices": [
        "처리 지연(processing delay)",
        "전달 지연(propagation delay)",
        "대기 지연(queuing delay)",
        "전송 지연(transmission delay)"
      ],
      "answer": 4,
      "explanation": "Queuing, transmission, propagation, processing 순으로 지연이 발생합니다. 우선 전송이 시작되기 전 패킷 큐(packet queue)에 쌓이는 queuing delay가 있을 수 있습니다. 다음으로 패킷의 모든 bit를 wire에 담는 transmission delay가 발생합니다. 이어서 실제 송신에서부터 수신까지 걸린 지연을 propagation delay라 합니다. 마지막으로 processing delay는 네트워크 내에서 라우터가 패킷 헤더를 보고 에러 확인이나 경로 결정 등에 쓰이는 시간을 말합니다.",
      "references": [
        {"E2E delay": "https://en.wikipedia.org/wiki/End-to-end_delay"},
        {"Processing delay": "https://en.wikipedia.org/wiki/Processing_delay"},
        {"Propagation delay": "https://en.wikipedia.org/wiki/Propagation_delay"},
        {"Queuing delay": "https://en.wikipedia.org/wiki/Queuing_delay"},
        {"Transmission delay": "https://en.wikipedia.org/wiki/Transmission_delay"}
      ]
    },
    {
      "question": "데이터 전송 시 source 노드에서 처음으로 보내는 패킷이라면 ___ 지연은 0(zero)이다.",
      "choices": [
        "처리 지연(processing delay)",
        "전달 지연(propagation delay)",
        "대기 지연(queuing delay)",
        "전송 지연(transmission delay)"
      ],
      "answer": 3,
      "explanation": "첫 패킷이면 송신 큐(queue)의 길이가 0이었을 것이므로 기다려야하는 앞선 요소들이 없어 지연도 0이 됩니다.",
      "references": [
        {"Processing delay": "https://en.wikipedia.org/wiki/Processing_delay"},
        {"Propagation delay": "https://en.wikipedia.org/wiki/Propagation_delay"},
        {"Queuing delay": "https://en.wikipedia.org/wiki/Queuing_delay"},
        {"Transmission delay": "https://en.wikipedia.org/wiki/Transmission_delay"}
      ]
    },
    {
      "question": "전송 지연(transmission delay)은 ___에 의존적이지 않다.",
      "choices": [
        "패킷 길이",
        "라우터 간 거리",
        "전송률",
        "전송 매체(medium)의 대역폭(bandwidth)"
      ],
      "answer": 2,
      "explanation": "전송 지연(transmission delay) = 패킷 길이 / 전송률\n이고 전송률은 대역폭(bandwidth)에 의존적입니다. 라우터 간 거리는 전송 지연과는 상관없고 전달 지연(propagation delay)과 관계있습니다.",
      "references": [
        {"Transmission delay": "https://en.wikipedia.org/wiki/Transmission_delay"},
        {"Propagation delay": "https://en.wikipedia.org/wiki/Propagation_delay"},
        {"Bandwidth": "https://en.wikipedia.org/wiki/Bandwidth_(computing)"}
      ]
    },
    {
      "question": "많은 패킷 전환(packet switching)에서 ___를 채용한다.",
      "choices": [
        "Stop and wait",
        "Stop and forward",
        "Store and wait",
        "Store and forward"
      ],
      "answer": 4,
      "explanation": "패킷 전환(packet switching)은 데이터를 패킷으로 분할 전송하여 계속하여 변하는 상황에도 대응할 수 있도록 설계되었습니다. 회로 전환(circuit switching)이 경로를 미리 할당해놓는 것과는 달리 동적으로 경로를 설정해 혼잡(congestion)을 회피할 수도 있습니다. 패킷 전환에서 store and forward는 긴 전송 지연이 생기더라도 최종적으로 전송을 보장하기위해 패킷을 저장부터 한다는 점에서 store라는 이름이 붙습니다.",
      "references": [
        {"Packet switching": "https://en.wikipedia.org/wiki/Packet_switching"},
        {"Circuit switching": "https://en.wikipedia.org/wiki/Circuit_switching"},
        {"Store and forward": "https://en.wikipedia.org/wiki/Store_and_forward"}
      ]
    },
    {
      "question": "만약 출발지와 목적지 사이에 N 개의 라우터가 있다면, 패킷 P를 보내기 위한 end-to-end(E2E) delay는 어떻게 되는가? (L = 패킷 P의 bit 수, R = transmission rate)",
      "choices": [
        "N+L/R",
        "N*L/R",
        "(N+1)*L/R",
        "2*L/R"
      ],
      "answer": 3,
      "explanation": "우선 종단 간에 N 개의 라우터가 있다면 subpath는 N+1 개가 됩니다. 라우터가 한 개일 때부터 생각해보면 이해하기 쉽습니다. 예를 들어, 종단 A, B 간에 라우터 Z가 있었다면 경로는 'A-Z-B'가 됩니다.\n이후 전송 크기를 계산하기 위해 L을 곱한 뒤, 전송 시간을 반영하기 위해 전송률에 역수를 취한 1/R을 곱합니다.",
      "references": [
        {"E2E delay": "https://en.wikipedia.org/wiki/End-to-end_delay"},
        {"Transmission delay": "https://en.wikipedia.org/wiki/Transmission_delay"}
      ]
    },
    {
      "question": "다음 중 목적이 다른 하나는?",
      "choices": [
        "패킷 교환(packet switching)",
        "메시지 교환(message switching)",
        "회선 교환(circuit switching)",
        "문맥 교환(context switching)"
      ],
      "answer": 4,
      "explanation": "앞선 세 개는 모두 네트워크 통신에서 여러 노드를 걸쳐 어떻게 경로를 설정하고 어떻게 데이터를 보낼 것인지에 대한 방법론들입니다. 반면, 문맥 교환(context switching)은 OS에서 프로세스 또는 스레드의 상태를 관리하기 위한 방법론입니다.",
      "references": [
        {"[한] Packet switching": "https://terms.naver.com/entry.naver?docId=2271819"},
        {"Packet switching": "https://en.wikipedia.org/wiki/Packet_switching"},
        {"[한] Message switching": "https://terms.naver.com/entry.naver?docId=829195"},
        {"Message switching": "https://en.wikipedia.org/wiki/Message_switching"},
        {"[한] Circuit switching": "https://terms.naver.com/entry.naver?docId=869840"},
        {"Circuit switching": "https://en.wikipedia.org/wiki/Circuit_switching"},
        {"[한] Context switching": "https://terms.naver.com/entry.naver?docId=818893"},
        {"Context switching": "https://en.wikipedia.org/wiki/Context_switch"}
      ]
    },
    {
      "question": "회선 교환(circuit switching)에서는 통신을 위한 자원들이 예약되므로 ___을 얻을 수 있다.",
      "choices": [
        "인증(authentication) 기능",
        "보장된 전송률(transmission rate)",
        "신뢰성(reliability)",
        "재사용성(reusability)"
      ],
      "answer": 2,
      "explanation": "회선 교환(circuit switching)은 물리 계층(physical layer)에서 자원 간 경쟁이 없도록 고정된 물리적 경로를 구현하므로 보장된 전송률을 보장할 수 있습니다.",
      "references": [
        {"Circuit switching": "https://en.wikipedia.org/wiki/Circuit_switching"}
      ]
    },
    {
      "question": "___ 시스템에서 자원은 온디맨드(on-demand)로 할당된다.",
      "choices": [
        "패킷 교환(packet switching)",
        "회선 교환(circuit switching)",
        "문맥 교환(context switching)",
        "주파수 교환(frequency switching)"
      ],
      "answer": 1,
      "explanation": "네트워크 자원을 미리 할당하여 경로가 고정된 회선 교환(circuit switching)과는 달리, 패킷 교환(packet switching)에서는 각 노드에서 네트워크의 상황에 따라 패킷의 경로가 계속하여 변할 수 있습니다. 실제 전송이 있을 때, 즉 요구가 있을 때 동적으로 정해진 경로에 해당하는 네트워크 자원이 할당됩니다.",
      "references": [
        {"[한] Packet switching": "https://terms.naver.com/entry.naver?docId=2271819"},
        {"Packet switching": "https://en.wikipedia.org/wiki/Packet_switching"},
        {"[한] Circuit switching": "https://terms.naver.com/entry.naver?docId=869840"},
        {"Circuit switching": "https://en.wikipedia.org/wiki/Circuit_switching"},
        {"[한] Context switching": "https://terms.naver.com/entry.naver?docId=818893"},
        {"Context switching": "https://en.wikipedia.org/wiki/Context_switch"}
      ]
    },
    {
      "question": "다음 중 응용 계층(application layer)의 서비스가 아닌 것은?",
      "choices": [
        "가상 터미널(virtual terminal)",
        "파일 전송 및 관리",
        "메일 서비스",
        "에러 감지"
      ],
      "answer": 4,
      "explanation": "에러 감지는 데이터 링크 계층(data link layer)의 역할입니다.",
      "references": [
        {"VT": "https://en.wikipedia.org/wiki/Virtual_terminal"},
        {"FTP": "https://en.wikipedia.org/wiki/File_Transfer_Protocol"},
        {"SMTP": "https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol"},
        {"Application layer": "https://en.wikipedia.org/wiki/Application_layer"},
        {"Data link layer": "https://en.wikipedia.org/wiki/Data_link_layer"}
      ]
    }
  ]
}
